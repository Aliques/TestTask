// <auto-generated />
using System;
using HospitalTestTask.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HospitalTestTask.Infrastructure.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20221014210311_Update-2-added-dataseeder")]
    partial class Update2addeddataseeder
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HospitalTestTask.Application.Models.DistrictPart", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("Number")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("DistrictPart");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Number = 112L
                        },
                        new
                        {
                            Id = 2L,
                            Number = 113L
                        },
                        new
                        {
                            Id = 3L,
                            Number = 114L
                        },
                        new
                        {
                            Id = 4L,
                            Number = 115L
                        },
                        new
                        {
                            Id = 5L,
                            Number = 116L
                        });
                });

            modelBuilder.Entity("HospitalTestTask.Application.Models.Doctor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("DistrictPartId")
                        .HasColumnType("bigint");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OfficeId")
                        .HasColumnType("bigint");

                    b.Property<long>("SpecializationId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DistrictPartId");

                    b.HasIndex("OfficeId");

                    b.HasIndex("SpecializationId");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DistrictPartId = 3L,
                            FullName = "Doctor_FullName_1",
                            OfficeId = 5L,
                            SpecializationId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            FullName = "Doctor_FullName_2",
                            OfficeId = 2L,
                            SpecializationId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            FullName = "Doctor_FullName_3",
                            OfficeId = 3L,
                            SpecializationId = 2L
                        },
                        new
                        {
                            Id = 4L,
                            DistrictPartId = 1L,
                            FullName = "Doctor_FullName_4",
                            OfficeId = 1L,
                            SpecializationId = 1L
                        },
                        new
                        {
                            Id = 5L,
                            DistrictPartId = 5L,
                            FullName = "Doctor_FullName_5",
                            OfficeId = 4L,
                            SpecializationId = 1L
                        },
                        new
                        {
                            Id = 6L,
                            DistrictPartId = 2L,
                            FullName = "Doctor_FullName_6",
                            OfficeId = 3L,
                            SpecializationId = 1L
                        },
                        new
                        {
                            Id = 7L,
                            FullName = "Doctor_FullName_7",
                            OfficeId = 1L,
                            SpecializationId = 3L
                        });
                });

            modelBuilder.Entity("HospitalTestTask.Application.Models.Office", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Office");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Number = 210
                        },
                        new
                        {
                            Id = 2L,
                            Number = 220
                        },
                        new
                        {
                            Id = 3L,
                            Number = 213
                        },
                        new
                        {
                            Id = 4L,
                            Number = 314
                        },
                        new
                        {
                            Id = 5L,
                            Number = 302
                        });
                });

            modelBuilder.Entity("HospitalTestTask.Application.Models.Patient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("DistrictPartId")
                        .HasColumnType("bigint");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patronymic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictPartId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("HospitalTestTask.Application.Models.Specialization", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Specialization");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Терапевт"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Хирург"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Офтальмолог"
                        });
                });

            modelBuilder.Entity("HospitalTestTask.Application.Models.Doctor", b =>
                {
                    b.HasOne("HospitalTestTask.Application.Models.DistrictPart", "DistrictPart")
                        .WithMany()
                        .HasForeignKey("DistrictPartId");

                    b.HasOne("HospitalTestTask.Application.Models.Office", "Office")
                        .WithMany()
                        .HasForeignKey("OfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalTestTask.Application.Models.Specialization", "Specialization")
                        .WithMany()
                        .HasForeignKey("SpecializationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DistrictPart");

                    b.Navigation("Office");

                    b.Navigation("Specialization");
                });

            modelBuilder.Entity("HospitalTestTask.Application.Models.Patient", b =>
                {
                    b.HasOne("HospitalTestTask.Application.Models.DistrictPart", "DistrictPart")
                        .WithMany()
                        .HasForeignKey("DistrictPartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DistrictPart");
                });
#pragma warning restore 612, 618
        }
    }
}
